401	101	1	ⓐ, ⓑ, ⓒ, ⓓ
402	101	2	ⓐ, ⓒ, ⓓ
403	101	3	ⓑ, ⓓ
404	101	4	ⓒ, ⓓ
405	102	1	2
406	102	2	3
407	102	3	4
408	102	4	5
409	103	1	Internal Schema
410	103	2	External Schema
411	103	3	Foreign Schema
412	103	4	Conceptual Schema
413	104	1	2
414	104	2	4
415	104	3	6
416	104	4	10
417	105	1	오버플로우 처리
418	105	2	언더플로우 처리
419	105	3	삭제 처리
420	105	4	삽입 처리
421	106	1	수치 코드에는 자리 값을 가지고 있는 가중 코드(weighted code)와 자리 값이 없는 비가중 코드(non-weighted code)로 구분할 수 있다.
422	106	2	10진 자기보수화 코드로는 2421 code, excess-3 code 등이 대표적이다.
423	106	3	3초과 코드는 8421 코드에 10진수 3을 더한 코드로 코드 내에 하나 이상의 1 이 반드시 포함되어 있어 0과 무신호를 구분하기 위한 코드이다.
424	106	4	그레이 코드(gray Code)는 대표적인 가중(weighted) 코드로 인접하나 코드의 비트가 1비트만 변하여 산술 연산에 적합하다.
425	107	1	가변 채널은 채널 제어기가 특정한 I/O 장치들에 전용인 전송통로를 지닌 형태를 말하며 구성은 간단하지만 고정 채널에 비해 효율이 낮은 단점을 가지고 있다.
426	107	2	버스트 모드는 여러 개의 I/O 장치가 채널의 기능을 공유하여 시분할적으로 데이터를 전송하는 형태로 비교적 저속의 I/O 장치 여러 개를 동시에 동작시키는데 적합하다.
427	107	3	멀티플렉서 모드는 하나의 I/O 장치가 데이터 전송을 행하고 있는 동안에는 채널의 기능을 완전히 독점하여 사용하므로 대량의 데이터를 고속으로 전송하는데 적합하다.
428	107	4	블록 멀티플렉서 채널은 하나의 데이터 경로를 경유한다는 점과 고속의 입출력 장치를 취급한다는 점에서 바이트 멀티플렉서 채널과 selector 채널을 결합한 형태의 채널이다.
429	108	1	1010
430	108	2	1011
431	108	3	111
432	108	4	1001
433	109	1	memory address register
434	109	2	index register
435	109	3	accumulator
436	109	4	status register
437	110	1	프로그램된 I/O
438	110	2	인터럽트에 의한 I/O
439	110	3	직접메모리접근(DMA)
440	110	4	간접메모리접근(IMA)
441	111	1	{3, 5}
442	111	2	{2, 6, 7}
443	111	3	{2, 3, 5, 6, 7}
444	111	4	{2, 7}
445	112	1	트리 디렉토리 구조
446	112	2	일반적인 그래프 디렉토리 구조
447	112	3	2단계 디렉토리 구조
448	112	4	비순환 그래프 디렉토리 구조
449	113	1	Allocation
450	113	2	Linking
451	113	3	Translation
452	113	4	Relocation
453	114	1	Fetch strategy
454	114	2	Placement strategy
455	114	3	Cycle strategy
456	114	4	Replacement strategy
457	115	1	파일이 가장 처음 변경된 시간 및 파일의 타입
458	115	2	파일 소유자의 사용자 번호
459	115	3	파일이 만들어진 시간
460	115	4	데이터가 담긴 블록의 주소
461	116	1	=
462	116	2	( )
463	116	3	+
464	116	4	{ }
465	117	1	Analysis
466	117	2	Reverse Engineering
467	117	3	Restructuring
468	117	4	Migration
469	118	1	분석 단계에서는 객체의 이름과 상태, 행위들을 개념적으로 파악한다.
470	118	2	설계 단계에서는 객체를 속성과 연산으로 정의하고 접근 방법을 구체화한다.
471	118	3	구현 단계에서는 클래스를 절차적 프로그래밍 언어로 기술한다.
472	118	4	테스트 단계에서는 클래스 단위 테스트와 시스템 테스트를 진행한다.
473	119	1	데이터 결합도(Data Coupling)는 두 모듈이 매개변수로 자료를 전달할 때 자료구조 형태로 전달되어 이용될 때 데이터가 결합되어 있다고 한다.
474	119	2	내용 결합도(Content Coupling)는 하나의 모듈이 직접적으로 다른 모듈의 내용을 참조할 때 두 모듈은 내용적으로 결합되어 있다고 한다.
475	119	3	공통 결합도(Common Coupling)는 두 모듈이 동일한 전역 데이터를 접근한다면 공통 결합되어 있다고 한다.
476	119	4	결합도(Coupling)는 두 모듈간의 상호작용, 또는 의존도 정도를 나타내는 것이다.
477	120	1	Brooks의 법칙
478	120	2	Boehm의 법칙
479	120	3	Pareto의 법칙
480	120	4	Jackson의 법칙
481	121	1	Pulse Code Multiplexing
482	121	2	Statistical Time Division Multiplexing
483	121	3	Synchronous Time Division Multiplexing
484	121	4	Frequency Division Multiplexing
485	122	1	회선접속 → 데이터링크 확립 → 정보 전송 → 회선절단 → 데이터링크 해제
486	122	2	데이터링크 확립 → 회선접속 → 정보 전송 → 데이터링크 해제 → 회선절단
487	122	3	회선접속 → 데이터링크 확립 → 정보 전송 → 데이터링크 해제 → 회선절단
488	122	4	데이터링크 확립 → 회선접속 → 정보 전송 → 회선절단 → 데이터링크 해제
489	123	1	9
490	123	2	18
491	123	3	27
492	123	4	36
493	124	1	버스형(Bus)
494	124	2	링형(Ring)
495	124	3	성형(Star)
496	124	4	그물형(Mesh)
497	125	1	P/F
498	125	2	HRC
499	125	3	Checksum
500	125	4	Hamming code
